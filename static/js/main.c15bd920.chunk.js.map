{"version":3,"sources":["serviceWorker.js","components/Header.js","components/Map.js","components/Home.js","components/ListItem.js","components/List.js","components/NavBar.js","components/Form.js","components/Information.js","components/Graffiti.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Header","react_default","a","createElement","className","MapContainer","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","mapStyles","width","maxWidth","height","borderRadius","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","props","marker","e","setState","onClose","inherits","createClass","key","value","_this2","dist","google","zoom","initialCenter","lat","lng","listings","map","listing","index","name","street_address","service_request_number","status","where_is_the_graffiti_located_","what_type_of_surface_is_the_graffiti_on_","creation_date","completion_date","url","icon","onClick","position","latitude","longitude","title","visible","split","row","React","Component","GoogleApiWrapper","apiKey","Home","Map","ListItem","style","List","NavBar","NavLink","exact","activeClassName","to","Form","onSubmit","queryResults","type","statuses","Information","src","href","history","createHistory","basename","process","Graffiti","ward","loadInitialValues","axios","get","res","data","forEach","includes","toConsumableArray","preventDefault","target","urlParams","objectSpread","params","setStatus","BrowserRouter","Route","path","render","_ref","pathname","Switch","component","List_List","Home_Home","ReactDOM","Graffiti_Graffiti","document","getElementById","URL","origin","addEventListener","fetch","response","contentType","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"mNAYMA,SAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,4DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,gHAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,UAO5BW,MAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,mEC9FlD,SAASC,IACtB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,6DACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAAb,0DCHOC,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAJ,IAAAe,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACEQ,UAAY,CACVC,MAAO,SACPC,SAAU,SACVC,OAAQ,QACRC,aAAc,QALlBnB,EAQEhB,MAAQ,CACNoC,mBAAmB,EACnBC,aAAc,GACdC,cAAe,IAXnBtB,EAeEuB,cAAgB,SAACC,EAAOC,EAAQC,GAChC1B,EAAK2B,SAAS,CACVL,cAAeE,EACfH,aAAcI,EACdL,mBAAmB,KAnBzBpB,EAuBE4B,QAAU,SAAAJ,GACJxB,EAAKhB,MAAMoC,mBACbpB,EAAK2B,SAAS,CACZP,mBAAmB,EACnBC,aAAc,QA3BtBrB,EAAA,OAAAC,OAAA4B,EAAA,EAAA5B,CAAAJ,EAAAC,GAAAG,OAAA6B,EAAA,EAAA7B,CAAAJ,EAAA,EAAAkC,IAAA,SAAAC,MAAA,WAkCW,IAAAC,EAAA9B,KACP,OACEV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACbH,EAAAC,EAAAC,cAACuC,EAAA,IAAD,CACAC,OAAQhC,KAAKqB,MAAMW,OACnBC,KAAM,GACNxC,UAAU,MACVyC,cAAe,CACdC,IAAK,WACLC,KAAM,aAINpC,KAAKqB,MAAMgB,SAASC,IAAI,SAACC,EAAQC,GAClC,IAAIC,EACF,WAAaF,EAAQG,eAAiB,eACtBH,EAAQI,uBAAyB,YACpCJ,EAAQK,OAAS,cACfL,EAAQM,+BAAiC,aAC1CN,EAAQO,yCAA2C,kBAC9CP,EAAQQ,cAExBR,EAAQS,kBAAiBP,GAAO,qBAA4BF,EAAQS,iBAEvE,IAAIC,EAA0B,cAAnBV,EAAQK,QAA6C,oBAAnBL,EAAQK,OAAgC,yDAA2D,uDAEhJ,OACEtD,EAAAC,EAAAC,cAACuC,EAAA,OAAD,CACAmB,KAAM,CACJD,OAEJrB,IAAKY,EACLW,QAASrB,EAAKV,cACdqB,KACEA,EAIFW,SAAU,CAACjB,IAAKI,EAAQc,SAAUjB,IAAKG,EAAQe,eAQjDhE,EAAAC,EAAAC,cAACuC,EAAA,OAAD,CACAoB,QAASnD,KAAKoB,cAClBmC,MAAO,+CACPd,KAAM,OACNW,SAAU,CAACjB,IAAK,UAAWC,KAAM,aACnC9C,EAAAC,EAAAC,cAACuC,EAAA,OAAD,CACAoB,QAASnD,KAAKoB,cACZqB,KAAM,eACNW,SAAU,CAACjB,IAAK,UAAWC,KAAM,cAC7B9C,EAAAC,EAAAC,cAACuC,EAAA,WAAD,CACET,OAAQtB,KAAKnB,MAAMqC,aACnBsC,QAASxD,KAAKnB,MAAMoC,kBACpBQ,QAASzB,KAAKyB,SAEdnC,EAAAC,EAAAC,cAAA,WACGQ,KAAKnB,MAAMsC,cAAcsB,MAAQzC,KAAKnB,MAAMsC,cAAcsB,KAAKgB,MAAM,KAAKnB,IAAI,SAACoB,EAAIlB,GAClF,OAAQlD,EAAAC,EAAAC,cAAA,MAAIoC,IAAKY,GAAT,IAAkBkB,EAAlB,eAhGtBhE,EAAA,CAAkCiE,IAAMC,WA2GzBC,6BAAiB,CAC9BC,OAAQ,2CADKD,CAEZnE,GC7GkBqE,mLAGjB,OACEzE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACwE,EAAD,CAAK3B,SAAUrC,KAAKqB,MAAMgB,mBALFuB,aCDnB,SAASK,EAAS5C,GAC/B,OAEE/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOyE,MAAO,CAACrD,MAAS,UACzCvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAc4B,EAAMkB,QAAQG,gBAC1CpD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iCAAd,cAA0D4B,EAAMkB,QAAQI,wBACxErD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iCAAd,WAAuD4B,EAAMkB,QAAQK,QACrEtD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iCAAd,YAAwD4B,EAAMkB,QAAQQ,eACrE1B,EAAMkB,QAAQS,iBAAmB1D,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iCAAd,cAA0D4B,EAAMkB,QAAQS,iBAE1G1D,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iCAAd,sBAAkE4B,EAAMkB,QAAQM,gCAChFvD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iCAAd,qBAAiE4B,EAAMkB,QAAQO,gDCZ9DqB,mLAEjB,OACE7E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACdO,KAAKqB,MAAMgB,SAASC,IAAI,SAACC,EAAQC,GAC5B,OACGlD,EAAAC,EAAAC,cAACyE,EAAD,CAAU1B,QAASA,EAASX,IAAKY,eAPdoB,6CCAnB,SAASQ,IACtB,OACE9E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CAASC,OAAK,EAAC7E,UAAU,WAAW8E,gBAAgB,mBAAmBC,GAAG,KAA1E,iBACAlF,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CAASC,OAAK,EAAC7E,UAAU,WAAW8E,gBAAgB,mBAAmBC,GAAG,SAA1E,kBACAlF,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CAASC,OAAK,EAAC7E,UAAU,WAAW8E,gBAAgB,mBAAmBC,GAAG,SAA1E,eCLO,SAASC,EAAKpD,GAC3B,OACI/B,EAAAC,EAAAC,cAAA,QAAMkF,SAAUrD,EAAMqD,SAAUjF,UAAU,mBAC5BH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAc4B,EAAMsD,cAClCrF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,WACAH,EAAAC,EAAAC,cAAA,SAAOiD,KAAK,OAAOhD,UAAU,UAAUmF,KAAK,WAC5CtF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,YACAH,EAAAC,EAAAC,cAAA,UAAQiD,KAAK,SAAShD,UAAU,uCAExB4B,EAAMwD,SAASvC,IAAI,SAACM,GAChB,OACItD,EAAAC,EAAAC,cAAA,UAAQoC,IAAKgB,GAASA,MAMtCtD,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAAlB,uCCjBL,SAASqF,IACtB,OACExF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,kDACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAd,gEACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWsF,IAAI,0DAC9BzF,EAAAC,EAAAC,cAAA,UAAMF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YAAYuF,KAAK,iDAA9B,6CCINC,QAAUC,GAAc,CAC5BC,SAAUC,oBAESC,6MACnBxG,MAAQ,CACNwD,SAAU,GACVwC,SAAU,CACR,MACA,OACA,aAEFjC,OAAQ,MACR0C,MAAO,EACPX,aAAc,0CAIhBY,kBAAoB,WAElBC,IAAMC,IADI,qEAETlH,KAAK,SAAAmH,GACFA,EAAIC,KAAKC,QAAQ,SAACrD,GACZ1C,EAAKhB,MAAMgG,SAASgB,SAAStD,EAAQK,SACvC/C,EAAK2B,SAAS,CAACqD,SAAQ,GAAAlE,OAAAb,OAAAgG,EAAA,EAAAhG,CAAMD,EAAKhB,MAAMgG,UAAjB,CAA2BtC,EAAQK,aAG9D/C,EAAK2B,SAAS,CAACa,SAAUqD,EAAIC,YASnCjB,SAAW,SAACnD,GACVA,EAAEwE,iBAEF,IAAIT,GAAQ,EACe,KAAxB/D,EAAEyE,OAAOV,KAAKzD,QAAcyD,EAAO/D,EAAEyE,OAAOV,KAAKzD,OAGpD,IACIoE,EAAY,GAEa,QAA1B1E,EAAEyE,OAAOpD,OAAOf,QAAiBoE,EAASnG,OAAAoG,EAAA,EAAApG,CAAA,GAAOmG,EAAP,CAAkBrD,OAAQrB,EAAEyE,OAAOpD,OAAOf,UAC1E,IAAVyD,IAAaW,EAASnG,OAAAoG,EAAA,EAAApG,CAAA,GAAOmG,EAAP,CAAkBX,UAG3CE,IAAMC,IAPI,oEAOK,CACbU,OAAQF,IAET1H,KAAK,SAAAmH,GACF3G,QAAQC,IAAI0G,EAAIC,MAChB9F,EAAK2B,SAAS,CACZmD,aAAc,uBAAyBe,EAAIC,KAAKxF,OAAS,YACzDkC,SAAUqD,EAAIC,YAMtBS,UAAY,SAACxD,GACX/C,EAAK2B,SAAS,CAACoB,+FA/Bf5C,KAAKuF,qDAkCE,IAAAzD,EAAA9B,KACP,OAEIV,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CAAQpB,QAASA,EAASE,SAAUC,mBAClC9F,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACH,EAAD,MACAC,EAAAC,EAAAC,cAAC4E,EAAD,MAEA9E,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CAAOC,KAAK,IAAIC,OACd,SAAAC,GACI,MAAgB,UADQA,EAA1B3I,SAAW4I,SACuBpH,EAAAC,EAAAC,cAACsF,EAAD,MAE9BxF,EAAAC,EAAAC,cAACiF,EAAD,CAAME,aAAc7C,EAAKjD,MAAM8F,aAAcE,SAAU/C,EAAKjD,MAAMgG,SAAUjC,OAAQd,EAAKc,OAAQwD,UAAWtE,EAAKsE,UAAW1B,SAAU5C,EAAK4C,cAKnJpF,EAAAC,EAAAC,cAACmH,EAAA,EAAD,KACErH,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CAAOhC,OAAK,EAACiC,KAAK,QAAQK,UAAW,OACrCtH,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CAAOhC,OAAK,EAACiC,KAAK,QAAQK,UAAW,kBAAOtH,EAAAC,EAAAC,cAACqH,EAAD,CAAMxE,SAAUP,EAAKjD,MAAMwD,cACvE/C,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CAAOhC,OAAK,EAACiC,KAAK,IAAIK,UAAW,kBAAOtH,EAAAC,EAAAC,cAACsH,EAAD,CAAMzE,SAAUP,EAAKjD,MAAMwD,wBAnFzCuB,aCRtCmD,IAASP,OAAOlH,EAAAC,EAAAC,cAACwH,EAAD,MAAcC,SAASC,eAAe,SVe/C,SAAkB/I,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAI+I,IAAI/B,kBAAwBvH,OAAOC,SAASkH,MACpDoC,SAAWvJ,OAAOC,SAASsJ,OAIvC,OAGFvJ,OAAOwJ,iBAAiB,OAAQ,WAC9B,IAAMnJ,EAAK,GAAAyC,OAAMyE,kBAAN,sBAEPzH,GAgEV,SAAiCO,EAAOC,GAEtCmJ,MAAMpJ,GACHK,KAAK,SAAAgJ,GAEJ,IAAMC,EAAcD,EAASE,QAAQhC,IAAI,gBAEnB,MAApB8B,EAAS3E,QACO,MAAf4E,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5CtJ,UAAUC,cAAcsJ,MAAMpJ,KAAK,SAAAC,GACjCA,EAAaoJ,aAAarJ,KAAK,WAC7BV,OAAOC,SAAS+J,aAKpB5J,EAAgBC,EAAOC,KAG1BgB,MAAM,WACLJ,QAAQC,IACN,mEArFA8I,CAAwB5J,EAAOC,GAI/BC,UAAUC,cAAcsJ,MAAMpJ,KAAK,WACjCQ,QAAQC,IACN,+GAMJf,EAAgBC,EAAOC,MUtC/BE","file":"static/js/main.c15bd920.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\n\nexport default function Header() {\n  return (\n    <div className=\"header\">\n      <h1 className=\"header-title\"> Chicago Graffiti Service Requests Visualization (change)</h1>\n      <p className=\"header-subtitle\"> Search Graffiti Work Requests in Chicago</p>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Map, GoogleApiWrapper,Marker,InfoWindow} from 'google-maps-react';\n\nexport class MapContainer extends React.Component {\n  mapStyles = {\n    width: '100rem',\n    maxWidth: '100rem',\n    height: '50rem',\n    borderRadius: '1rem'\n  };\n\n  state = {\n    showingInfoWindow: false,  //Hides or the shows the infoWindow\n    activeMarker: {},          //Shows the active marker upon click\n    selectedPlace: {}          //Shows the infoWindow to the selected place upon a marker\n  };\n \n  \n  onMarkerClick = (props, marker, e) =>{\n  this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n  }\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  \n\n  render() {\n    return (\n      <div className=\"container map-container\">\n        <Map\n        google={this.props.google}\n        zoom={10}\n        className=\"map\"\n        initialCenter={{\n         lat: 41.8727647,\n         lng: -87.6566319\n        }}\n      >\n        \n        {this.props.listings.map((listing,index) => {\n        let name= \n          \"Address:\" + listing.street_address + \"+\" + \n          \"Request #: \" + listing.service_request_number + \"+\" + \n          \"Status: \" + listing.status + \"+\" +\n          \"Location: \" + listing.where_is_the_graffiti_located_ + \"+\" +\n          \"Surface: \" + listing.what_type_of_surface_is_the_graffiti_on_ + \"+\" +\n          \"Date Created: \" + listing.creation_date\n\n          if(listing.completion_date) name+= \"+\" + \"Completion Date: \" + listing.completion_date\n\n          let url = (listing.status === \"Completed\" || listing.status === \"Completed - Dup\") ? \"http://maps.google.com/mapfiles/ms/icons/green-dot.png\" : \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\"\n\n          return (\n            <Marker\n            icon={{\n              url\n            }}\n          key={index}\n          onClick={this.onMarkerClick}\n          name={\n            name\n\n          }\n\n          position={{lat: listing.latitude, lng: listing.longitude}}\n        />\n\n        \n          )\n        })}\n\n        \n        <Marker\n        onClick={this.onMarkerClick}\n    title={'The marker`s title will appear as a tooltip.'}\n    name={'SOMA'}\n    position={{lat: 37.778519, lng: -122.405640}} />\n  <Marker\n  onClick={this.onMarkerClick}\n    name={'Dolores park'}\n    position={{lat: 37.759703, lng: -122.428093}} />\n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n          onClose={this.onClose}\n        >\n          <div>\n            {this.state.selectedPlace.name && this.state.selectedPlace.name.split(\"+\").map((row,index) => {\n              return (<h4 key={index}> {row} </h4>)\n            })}\n          </div>\n        </InfoWindow>\n        \n      </Map>\n      </div>\n    )\n  }\n  \n}\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyAoD1ugx6gtXD_RUD-EIMtge1jfBaIDvSE'\n})(MapContainer);","import React, { Component } from 'react'\n\nimport Map from './Map'\nexport default class Home extends Component {\n    \n  render() {\n    return (\n      <div>\n          <Map listings={this.props.listings}/>\n\n      </div>\n    )\n  }\n}\n","import React from 'react'\n\nexport default function ListItem(props) {\n  return (\n\n    <div className=\"card\" style={{\"width\": \"18rem\"}}>\n  <div className=\"card-body\">\n    <h3 className=\"card-title\">{props.listing.street_address}</h3>\n    <h5 className=\"card-subtitle mb-2 text-muted\">Request #: {props.listing.service_request_number}</h5>\n    <h5 className=\"card-subtitle mb-2 text-muted\">Status: {props.listing.status}</h5>\n    <h5 className=\"card-subtitle mb-2 text-muted\">Created: {props.listing.creation_date}</h5>\n    {props.listing.completion_date && <h5 className=\"card-subtitle mb-2 text-muted\">Completed: {props.listing.completion_date}</h5>}\n\n    <h5 className=\"card-subtitle mb-2 text-muted\">Graffiti Location: {props.listing.where_is_the_graffiti_located_}</h5>\n    <h5 className=\"card-subtitle mb-2 text-muted\">Graffiti Surface: {props.listing.what_type_of_surface_is_the_graffiti_on_}</h5>\n    \n  </div>\n</div>\n       \n\n  )\n}\n","import React, { Component } from 'react'\nimport ListItem from './ListItem'\nexport default class List extends Component {  \n  render() {\n    return (\n      <div className=\"container list\">\n      <div className=\"cardlist\">\n      {this.props.listings.map((listing,index)=> {\n            return (\n               <ListItem listing={listing} key={index}/>\n            )})}      \n      </div>\n    \n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport {NavLink} from 'react-router-dom';\nexport default function NavBar() {\n  return (\n    <div className=\"nav\">\n        <NavLink exact className=\"nav-link\" activeClassName=\"nav-link--active\" to=\"/\"> Request Map </NavLink>\n        <NavLink exact className=\"nav-link\" activeClassName=\"nav-link--active\" to=\"/list\"> Request List </NavLink>\n        <NavLink exact className=\"nav-link\" activeClassName=\"nav-link--active\" to=\"/info\"> App Info </NavLink>\n\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function Form(props) {\n  return (\n      <form onSubmit={props.onSubmit} className=\"container form \">\n                    <h2 className=\"form-title\">{props.queryResults}</h2>\n                    <h4 className=\"form-label\"> Ward #</h4>\n                    <input name=\"ward\" className=\"textbox\" type=\"number\"/>\n                    <h4 className=\"form-label\"> Status </h4>\n                    <select name=\"status\" className=\"custom-select custom-select-lg mb-3\">\n                        {\n                            props.statuses.map((status) => {\n                                return (\n                                    <option key={status}>{status}</option>\n                                )\n                            })\n                        }\n                        \n                    </select>\n                    <button className=\"button\">Submit Search</button>\n        </form>\n  )\n}\n","import React from 'react'\n\nexport default function Information() {\n  return (\n    <div className=\"container information\">\n      <h2 className=\"info-title\">This application was developed by Alex Chomiak</h2>\n      <h3 className=\"info-subtitle\">It was created using React and the react-google-maps library</h3>\n      <img className=\"info-img\" src=\"https://image.flaticon.com/icons/png/512/25/25231.png\"/>\n      <h3  ><a className=\"info-link\" href=\"https://github.com/alexchomiak/it202-project2\"> Check out the Github Repo!</a></h3>\n    </div>\n  )\n}\n","import React, { Component } from 'react'\nimport Header from './Header'\nimport Home from './Home'\nimport List from './List'\nimport {BrowserRouter as Router,Switch, Route} from 'react-router-dom'\nimport NavBar from './NavBar';\nimport Form from './Form'\nimport axios from 'axios';\nimport Information from './Information';\nimport createHistory from 'history/createBrowserHistory';\n\n\nconst history = createHistory({\n  basename: process.env.PUBLIC_URL\n})\nexport default class Graffiti extends Component {\n  state = {\n    listings: [],\n    statuses: [\n      \"All\",\n      \"Open\",\n      \"Completed\"\n    ],\n    status: \"All\",\n    ward: -1,\n    queryResults: \"Enter a Ward # and Status to search!\"\n}\n\n\n  loadInitialValues = () => {\n    let url = \"https://data.cityofchicago.org/resource/cdmx-wzbz.json?$limit=200\";\n    axios.get(url)\n    .then(res => {\n        res.data.forEach((listing) => {\n          if(!this.state.statuses.includes(listing.status)) {\n            this.setState({statuses: [...this.state.statuses, listing.status]})\n          }\n        })\n        this.setState({listings: res.data})\n    })\n  }\n\n\n  componentDidMount() {\n    this.loadInitialValues()\n  }\n  \n  onSubmit = (e) => {\n    e.preventDefault();\n    //set ward\n    let ward = -1;\n    if(e.target.ward.value !== '') ward = e.target.ward.value\n\n    //initialize url\n    let url = \"https://data.cityofchicago.org/resource/cdmx-wzbz.json?$limit=200\";\n    let urlParams = {}\n    //set params\n    if(e.target.status.value !== \"All\") urlParams = {...urlParams, status: e.target.status.value}\n    if(ward !== -1) urlParams = {...urlParams, ward}\n\n    //grab data\n    axios.get(url, {\n      params: urlParams\n    })\n    .then(res => {\n        console.log(res.data)\n        this.setState({\n          queryResults: \"Your query returned \" + res.data.length + \" results.\",\n          listings: res.data\n        })\n    })\n\n  }\n\n  setStatus = (status) => {\n    this.setState({status})\n  }\n\n  render() {\n    return (\n     \n        <Router history={history} basename={process.env.PUBLIC_URL}>      \n          <div>\n          <Header/>\n          <NavBar/>\n          \n          <Route path=\"/\" render={ \n            ({location: {pathname}}) => {\n                if(pathname === \"/info\") return <Information/>\n                return (\n                  <Form queryResults={this.state.queryResults} statuses={this.state.statuses} status={this.status} setStatus={this.setStatus} onSubmit={this.onSubmit} />\n                )\n                }} />\n          \n          \n          <Switch>\n            <Route exact path=\"/info\" component={null}/>\n            <Route exact path=\"/list\" component={() => (<List listings={this.state.listings}/>)}/>\n            <Route exact path=\"/\" component={() => (<Home listings={this.state.listings}/>)}>\n              \n            </Route>\n            \n          </Switch>\n\n          </div>\n        \n        </Router>\n     \n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport './App.scss';\nimport Graffiti from './components/Graffiti';\n\nReactDOM.render(<Graffiti />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}